{"version":3,"sources":["F:/Projects/PERS/COMICS/assets/images/robot-prod.png","F:/Projects/PERS/COMICS/constants/Colors.js","F:/Projects/PERS/COMICS/components/TabBarIcon.js","F:/Projects/PERS/COMICS/components/StyledText.js","F:/Projects/PERS/COMICS/screens/HomeScreen.js","F:/Projects/PERS/COMICS/screens/LinksScreen.js","F:/Projects/PERS/COMICS/screens/SettingsScreen.js","F:/Projects/PERS/COMICS/screens/IssueScreen.js","F:/Projects/PERS/COMICS/navigation/MainTabNavigator.js","F:/Projects/PERS/COMICS/navigation/AppNavigator.web.js","F:/Projects/PERS/COMICS/components/socket-context.js","F:/Projects/PERS/COMICS/App.js","F:/Projects/PERS/COMICS/web-build/register-service-worker.js","F:/Projects/PERS/COMICS/assets/images/robot-dev.png","F:/Projects/PERS/COMICS/assets/fonts/SpaceMono-Regular.ttf"],"names":["module","exports","TabBarIcon","props","Ionicons","name","size","style","marginBottom","color","focused","Colors","MonoText","Text","fontFamily","MyInternalItem","id","this","item","TouchableOpacity","onPress","state","navigate","socket","title","showHeader","pageCount","link","cardBody","button","Image","resizeMode","source","uri","href","height","width","flex","React","PureComponent","MyInternalSingleItem","alert","MyListItem","bookIssues","index","singleBookIssue","issueCount","transparent","fontWeight","fontSize","styles","flatList","data","issues","horizontal","windowSize","initialListSize","initialNumToRender","maxToRenderPerBatch","removeClippedSubviews","renderItem","bind","keyExtractor","toString","console","log","HomeScreen","isLoading","isConnected","noStorage","books","search","renderHeader","placeholder","lightTheme","round","onChangeText","text","searchFilterFunction","autoCorrect","setState","newData","filter","itemData","toUpperCase","textData","indexOf","updateSearch","GettingBooks","a","async","AsyncStorage","getItem","JSON","parse","HandleHome","i","length","push","setItem","stringify","error","_renderItem","navigation","io","transports","on","emit","obj","find","o","tempId","entry","issue","View","container","ScrollView","contentContainerStyle","contentContainer","welcomeContainer","require","welcomeImage","getStartedContainer","DevelopmentModeNotice","getStartedText","codeHighlightContainer","homeScreenFilename","helpContainer","handleHelpPress","helpLink","helpLinkText","tabBarInfoContainer","tabBarInfoText","navigationFilename","codeHighlightText","value","Component","developmentModeText","WebBrowser","navigationOptions","headerTitle","headerShown","headerTitleStyle","textAlign","alignSelf","headerRight","StyleSheet","create","backgroundColor","lineHeight","row","justifyContent","paddingTop","alignItems","marginTop","marginLeft","marginHorizontal","marginVertical","borderRadius","paddingHorizontal","position","bottom","left","right","Platform","select","ios","shadowColor","shadowOffset","shadowOpacity","shadowRadius","android","elevation","paddingVertical","titleCard","minWidth","LinksScreen","SettingsScreen","IssueScreen","page","pages","vertical","checkVertical","url","getParam","_swapVertical","StatusBar","setHidden","getPage","getSize","Dimensions","get","setParams","swapVertical","gestureState","refs","_scrollView","scrollTo","x","y","animated","minimumZoomScale","maximumZoomScale","TouchableHighlight","evt","cache","parseInt","overscrollBehaviorY","touchAction","ref","paddingBottom","flexGrow","nativeEvent","pageX","locationX","locationY","pageY","updateSavedPage","Button","config","web","headerMode","headerLayoutPreset","default","HomeStack","createStackNavigator","Home","tabBarVisible","routes","routeName","tabBarLabel","tabBarIcon","OS","path","LinksStack","Links","SettingsStack","Settings","tabNavigator","createBottomTabNavigator","switchNavigator","createSwitchNavigator","Main","MainTabNavigator","createBrowserApp","history","createContext","App","useState","isLoadingComplete","setLoadingComplete","skipLoadingScreen","barStyle","AppLoading","startAsync","loadResourcesAsync","onError","handleLoadingError","onFinish","handleFinishLoading","Promise","all","Asset","loadAsync","Font","font","Roboto","Roboto_medium","warn","navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch"],"mappings":"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","file":"static/js/app.981855d3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/robot-prod.c7578911.png\";","const tintColor = '#2f95dc';\n\nexport default {\n  tintColor,\n  tabIconDefault: '#ccc',\n  tabIconSelected: tintColor,\n  tabBar: '#fefefe',\n  errorBackground: 'red',\n  errorText: '#fff',\n  warningBackground: '#EAEB5E',\n  warningText: '#666804',\n  noticeBackground: tintColor,\n  noticeText: '#fff',\n};\n","import React from 'react';\nimport { Ionicons } from '@expo/vector-icons';\n\nimport Colors from '../constants/Colors';\n\nexport default function TabBarIcon(props) {\n  return (\n    <Ionicons\n      name={props.name}\n      size={26}\n      style={{ marginBottom: -3 }}\n      color={props.focused ? Colors.tabIconSelected : Colors.tabIconDefault}\n    />\n  );\n}\n","import React from 'react';\nimport { Text } from 'react-native';\n\nexport function MonoText(props) {\n  return (\n    <Text {...props} style={[props.style, { fontFamily: 'space-mono' }]} />\n  );\n}\n","import * as WebBrowser from 'expo-web-browser';\nimport React, {Component} from 'react';\nimport {\n  Image,\n  Platform,\n  ScrollView,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  AsyncStorage,\n  View,\n} from 'react-native';\nimport io from 'socket.io-client';\nimport { Container, Header, Content, Card, CardItem, Body, Row } from 'native-base';\nimport { SearchBar } from 'react-native-elements';\n\nimport { MonoText } from '../components/StyledText';\nimport { FlatList } from 'react-native-gesture-handler';\n\n\nclass MyInternalItem extends React.PureComponent{\n  render() {\n    let id = this.props.item.id;\n    return (\n      <Card>\n                    <TouchableOpacity  onPress={() => this.props.state.navigate('IssueScreen',{id: this.props.item.id,socket: \"\", title: this.props.item.title,showHeader: false,pageCount: this.props.item.link[3]['pse:count']})}>\n\n          <CardItem cardBody button onPress={() => this.props.state.navigate('IssueScreen',{id: id,socket: this.props.state.socket,title: this.props.item.title,showHeader: false,pageCount: this.props.item.link[3]['pse:count']})}>\n            <Image resizeMode={'contain'} source={{uri: \"http://l2.mml2.net:2202\" + this.props.item.link[0].href}} style={{height: 277,width:180,flex: 1}}/>\n          </CardItem>\n          </TouchableOpacity>\n\n      </Card>\n    )\n  }\n}\nclass MyInternalSingleItem extends React.PureComponent{\n  render(){\n    return (\n      <Card button onPress={() => alert(\"This is a card\")}>\n          <TouchableOpacity  onPress={() => this.props.state.navigate('IssueScreen',{id: this.props.item.id,socket: \"\", title: this.props.item.title,showHeader: false,pageCount: this.props.item.link[3]['pse:count']})}>\n          <CardItem cardBody>\n            <Image resizeMode={'contain'} source={{uri: \"http://l2.mml2.net:2202\" + this.props.item.link[0].href}} style={{height: 277,width:180,flex: 1}}/>\n          </CardItem>\n          </TouchableOpacity>\n      </Card>\n    )\n  }\n}\n\nclass MyListItem extends React.PureComponent {\n  bookIssues = ({item, index}) => (\n    <MyInternalItem item={item} state = {this.props.state} />\n  );\n  singleBookIssue = ({item, index}) => (\n    <MyInternalSingleItem item={item} state={this.props.state} />\n  )\n\n\n  render() {\n    if (this.props.item.issueCount > 0){\n    return (\n      <Card transparent>\n      <CardItem>\n      <Text style={{fontWeight:'bold',fontSize: 25,color:'#595957'}}>{this.props.item.title}</Text>\n    </CardItem>\n    <CardItem>\n    <FlatList style={styles.flatList}\n                data={this.props.item.issues}\n                horizontal={true}\n                windowSize={4}\n                initialListSize={4}\n                initialNumToRender={4}\n                maxToRenderPerBatch={4}\n                removeClippedSubviews={true}\n                renderItem={this.bookIssues.bind(this)}\n                keyExtractor={(item, index) => index.toString()} \n                />\n                </CardItem>\n    </Card>\n  );\n} else {\n  console.log(\"aint big enough\");\n  console.log(\"http://l2.mml2.net:2202\" + this.props.item.issues.link[0].href)\n  return (\n    <Card transparent>\n      <CardItem>\n      <Text style={{fontWeight:'bold',fontSize: 25,color:'#595957'}}>{this.props.item.title}</Text>\n    </CardItem>\n    <CardItem>\n    <Card button onPress={() => alert(\"This is a card\")}>\n          <TouchableOpacity  onPress={() => this.props.state.navigate('IssueScreen',{id: this.props.item.issues.id,socket: \"\", title: this.props.item.issues.title,showHeader: false,pageCount: this.props.item.issues.link[3]['pse:count']})}>\n          <CardItem cardBody>\n            <Image resizeMode={'contain'} source={{uri: \"http://l2.mml2.net:2202\" + this.props.item.issues.link[0].href}} style={{height: 277,width:180}}/>\n          </CardItem>\n          </TouchableOpacity>\n      </Card>\n                </CardItem>\n    </Card>\n  );\n}\n  }\n}\n\nexport default class HomeScreen extends Component{\n\n  state = {\n    isLoading: true,\n    isConnected: false,\n    noStorage: true,\n    books: [],\n    data: [],\n    search: \"\"\n\n  };\n  static navigationOptions = ({ navigation }) => {\n    return {\n        headerTitle: \"Comic Library\",\n        headerShown: true,\n        headerTitleStyle: {\n            textAlign: 'center',\n            alignSelf: 'center'\n        },\n        headerRight: (<View></View>)\n    };\n};\n  componentDidMount(){\n    const {navigate} = this.props.navigation;\n    this.setState({\n      navigate: navigate\n    });\n    const socket = io('http://l2.mml2.net:3000', {\n      transports: ['websocket'],\n    });\n    this.setState({\n      socket: socket\n    });\n\n    socket.on('connect', () => {\n      this.setState({ isConnected: true });\n    });\n\n    socket.on('GotHome', data => {\n      console.log(\"got books back\");\n     this.HandleHome(data);\n    });\n    this.GettingBooks();\n    socket.emit(\"GetHome\",\"mg\");\n\n  }\n\n  renderHeader = () => {    \n    return (      \n      <SearchBar        \n        placeholder=\"Type Here...\"        \n        lightTheme        \n        round        \n        onChangeText={text => this.searchFilterFunction(text)}\n        autoCorrect={false}             \n      />    \n    );  \n  };\n\n  searchFilterFunction = search => {    \n    this.setState({ search });\n    const newData = this.state.books.filter(item => {      \n      const itemData = `${item.title.toUpperCase()}   \n      ${item.title.toUpperCase()} ${item.title.toUpperCase()}`;\n      \n       const textData = search.toUpperCase();\n        \n       return itemData.indexOf(textData) > -1;    \n    }); \n    this.setState({ data: newData });  \n  };\n\n  updateSearch = search => {\n    this.setState({ search });\n  };\n  GettingBooks = async () => {\n    try {\n      let books = await AsyncStorage.getItem('books') || [];\n      this.setState({\n        books: JSON.parse(books),\n        noStorage: false,\n        isLoading: false,\n        data: JSON.parse(books)\n      });\n      \n    } catch (e){\n      console.log(e);\n    }\n  }\n  componentWillUnmount(){\n    console.log(\"trashing\");\n  }\n  HandleHome = async(data) => {\n    let books = [];\n    for (var i=0;i<data.length;i++){\n      var issueCount;\n      let issues = JSON.parse(data[i].issues);\n      issueCount = issues.length;\n      if (!issueCount){\n        issueCount = 0;\n      }\n      books.push({\"title\": data[i].title, \"id\": data[i].id,\"issues\":issues,\"issueCount\":issueCount});\n\n    }\n    this.setState({\n      books: books,\n      isLoading: false\n    });\n    try {\n      await AsyncStorage.setItem('books',JSON.stringify(books));\n    } catch (e){\n      console.log(error);\n    }\n  }\n  HandleIssue(data){\n    let books = this.state.books;\n    let obj = books.find(o => o.id === data.tempId.toString());\n    for (var i=0;i<data.entry.length;i++){\n      let issue = {\"title\":data.entry[i].title,\"id\":data.entry[i].id,\"img\": data.entry[i].link[0].href};\n      obj.issues.push(issue);\n    }\n  }\n\n  _renderItem = ({item, index}) => (\n    <MyListItem item={item} state={this.state}/>\n  );\n\n  render() {\n    const { search } = this.state;\n    if (this.state.isLoading){\n    return (\n      <View style={styles.container}>\n        <ScrollView\n          style={styles.container}\n          contentContainerStyle={styles.contentContainer}>\n          <View style={styles.welcomeContainer}>\n            <Image\n              source={\n                __DEV__\n                  ? require('../assets/images/robot-dev.png')\n                  : require('../assets/images/robot-prod.png')\n              }\n              style={styles.welcomeImage}\n            />\n          </View>\n\n          <View style={styles.getStartedContainer}>\n            <DevelopmentModeNotice />\n\n            <Text style={styles.getStartedText}>Get started by opening2</Text>\n\n            <View\n              style={[styles.codeHighlightContainer, styles.homeScreenFilename]}>\n              <MonoText>screens/HomeScreen.js</MonoText>\n            </View>\n\n            <Text style={styles.getStartedText}>\n              Change this text and your app will automatically reload.\n            </Text>\n          </View>\n\n          <View style={styles.helpContainer}>\n            <TouchableOpacity onPress={handleHelpPress} style={styles.helpLink}>\n              <Text style={styles.helpLinkText}>\n                Help, it didn’t automatically reload!\n              </Text>\n            </TouchableOpacity>\n          </View>\n        </ScrollView>\n\n        <View style={styles.tabBarInfoContainer}>\n          <Text style={styles.tabBarInfoText}>\n            This is a tab bar. You can edit it in:\n          </Text>\n\n          <View\n            style={[styles.codeHighlightContainer, styles.navigationFilename]}>\n            <MonoText style={styles.codeHighlightText}>\n              navigation/MainTabNavigator.js\n            </MonoText>\n          </View>\n        </View>\n      </View>\n    );\n            } else {\n              return(\n                <View style={styles.container}>\n                              <SearchBar\n        placeholder=\"Type Here...\"\n        onChangeText={this.searchFilterFunction}\n        lightTheme={true}\n        value={search}\n      />\n                  <FlatList style={styles.flatList}\n                  data={this.state.data}\n                  windowSize={4}\ninitialListSize={4}\ninitialNumToRender={4}\nmaxToRenderPerBatch={4}\n                  removeClippedSubviews={true}\n                  keyExtractor={item => item.title} \n                  renderItem={this._renderItem.bind(this)}\n                      />\n                </View>\n              );\n            }\n  };\n}\nfunction DevelopmentModeNotice() {\n  if (__DEV__) {\n    const learnMoreButton = (\n      <Text onPress={handleLearnMorePress} style={styles.helpLinkText}>\n        Learn more\n      </Text>\n    );\n\n    return (\n      <Text style={styles.developmentModeText}>\n        Development mode is enabled: your app will be slower but you can use\n        useful development tools. {learnMoreButton}\n      </Text>\n    );\n  } else {\n    return (\n      <Text style={styles.developmentModeText}>\n        You are not in development mode: your app will run at full speed.\n      </Text>\n    );\n  }\n}\n\nfunction BookTitles(){\n\n}\n\nfunction BookIssues(){\n  return (\n    <Text>\"Hi\"</Text>\n  )\n}\n\nfunction handleLearnMorePress() {\n  WebBrowser.openBrowserAsync(\n    'https://docs.expo.io/versions/latest/workflow/development-mode/'\n  );\n}\n\nfunction handleHelpPress() {\n  WebBrowser.openBrowserAsync(\n    'https://docs.expo.io/versions/latest/workflow/up-and-running/#cant-see-your-changes'\n  );\n}\n\nconst styles = StyleSheet.create({\n\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n  flatList: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n  developmentModeText: {\n    marginBottom: 20,\n    color: 'rgba(0,0,0,0.4)',\n    fontSize: 14,\n    lineHeight: 19,\n    textAlign: 'center',\n  },\n  row: {\n    flex: 1,\n    justifyContent: \"space-around\"\n  },\n  contentContainer: {\n    paddingTop: 30,\n  },\n  welcomeContainer: {\n    alignItems: 'center',\n    marginTop: 10,\n    marginBottom: 20,\n  },\n  welcomeImage: {\n    width: 100,\n    height: 80,\n    resizeMode: 'contain',\n    marginTop: 3,\n    marginLeft: -10,\n  },\n  getStartedContainer: {\n    alignItems: 'center',\n    marginHorizontal: 50,\n  },\n  homeScreenFilename: {\n    marginVertical: 7,\n  },\n  codeHighlightText: {\n    color: 'rgba(96,100,109, 0.8)',\n  },\n  codeHighlightContainer: {\n    backgroundColor: 'rgba(0,0,0,0.05)',\n    borderRadius: 3,\n    paddingHorizontal: 4,\n  },\n  getStartedText: {\n    fontSize: 17,\n    color: 'rgba(96,100,109, 1)',\n    lineHeight: 24,\n    textAlign: 'center',\n  },\n  tabBarInfoContainer: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    ...Platform.select({\n      ios: {\n        shadowColor: 'black',\n        shadowOffset: { width: 0, height: -3 },\n        shadowOpacity: 0.1,\n        shadowRadius: 3,\n      },\n      android: {\n        elevation: 20,\n      },\n    }),\n    alignItems: 'center',\n    backgroundColor: '#fbfbfb',\n    paddingVertical: 20,\n  },\n  tabBarInfoText: {\n    fontSize: 17,\n    color: 'rgba(96,100,109, 1)',\n    textAlign: 'center',\n  },\n  navigationFilename: {\n    marginTop: 5,\n  },\n  helpContainer: {\n    marginTop: 15,\n    alignItems: 'center',\n  },\n  helpLink: {\n    paddingVertical: 15,\n  },\n  helpLinkText: {\n    fontSize: 14,\n    color: '#2e78b7',\n  },\n  titleCard: {\n    flex: 1,\n    minWidth: 300\n  }\n});\n","import React from 'react';\nimport { ScrollView, StyleSheet } from 'react-native';\nimport { ExpoLinksView } from '@expo/samples';\n\nexport default function LinksScreen() {\n  return (\n    <ScrollView style={styles.container}>\n      {/**\n       * Go ahead and delete ExpoLinksView and replace it with your content;\n       * we just wanted to provide you with some helpful links.\n       */}\n      <ExpoLinksView />\n    </ScrollView>\n  );\n}\n\nLinksScreen.navigationOptions = {\n  title: 'Links',\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: 15,\n    backgroundColor: '#fff',\n  },\n});\n","import React from 'react';\nimport { ExpoConfigView } from '@expo/samples';\n\nexport default function SettingsScreen() {\n  /**\n   * Go ahead and delete ExpoConfigView and replace it with your content;\n   * we just wanted to give you a quick view of your config.\n   */\n  return <ExpoConfigView />;\n}\n\nSettingsScreen.navigationOptions = {\n  title: 'app.json',\n};\n","import * as WebBrowser from 'expo-web-browser';\r\nimport React, { Component } from 'react';\r\nimport {\r\n    Image,\r\n    Platform,\r\n    ScrollView,\r\n    StyleSheet,\r\n    Text,\r\n    TouchableOpacity,\r\n    Dimensions,\r\n    TouchableHighlight,\r\n    AsyncStorage,\r\n    Button,\r\n    View,\r\n    StatusBar\r\n} from 'react-native';\r\nimport io from 'socket.io-client';\r\nimport { Container, Header, Content, Card, CardItem, Body, Row } from 'native-base';\r\n\r\nimport { MonoText } from '../components/StyledText';\r\nimport { FlatList } from 'react-native-gesture-handler';\r\nimport GestureRecognizer, { swipeDirections } from 'react-native-swipe-gestures';\r\n\r\n\r\nexport default class IssueScreen extends Component {\r\n    state = {\r\n        page: 0,\r\n        isLoading: true,\r\n        headerTitle: \"Avengers\",\r\n        headerShown: false,\r\n        pages: [],\r\n        vertical: false\r\n    };\r\n    static navigationOptions = ({ navigation }) => {\r\n        return {\r\n            headerTitle: navigation.getParam('title'),\r\n            headerShown: navigation.getParam('showHeader'),\r\n            headerTitleStyle: {\r\n                textAlign: 'center',\r\n                alignSelf: 'center'\r\n            },\r\n            headerRight: (<View><Button title=\"Vertical\" onPress={() => navigation.getParam('swapVertical')()}></Button></View>)\r\n        };\r\n    };\r\n    componentDidMount() {\r\n        const { navigation } = this.props;\r\n        StatusBar.setHidden(true);\r\n        this.getPage(navigation);\r\n        Image.getSize(\"http://l2.mml2.net:2202/opds-comics/comicreader/2141?page=3&width=\" + Dimensions.get('window').width, (width, height) => {\r\n            if (this.props.width && !this.props.height) {\r\n                this.checkVertical(this.props.width,height * (this.props.width / width),navigation);\r\n            } else if (!this.props.width && this.props.height) {\r\n                this.checkVertical(width * (this.props.height / height),this.props.height,navigation);\r\n            } else {\r\n                this.checkVertical(width,height,navigation);\r\n            }\r\n        this.props.navigation.setParams({ showHeader: false })\r\n        this.props.navigation.setParams({ swapVertical: this._swapVertical });\r\n        \r\n        });\r\n\r\n    }\r\n    checkVertical = async (width,height,navigation) => {\r\n        try {\r\n            let vert = await AsyncStorage.getItem('vertical') || \"false\";\r\n            if (vert == \"true\"){\r\n                console.log(\"here\");\r\n                let pages = this.state.pages;\r\n                for (var i = 0; i<this.state.pageCount; i++) {\r\n                    var url = \"http://l2.mml2.net:2202/opds-comics/comicreader/\" + this.state.id + \"?page=\" + i + \"\";\r\n                    pages.push(url);\r\n                }\r\n                this.setState({\r\n                    pages: pages,\r\n                    vertical: true,\r\n                    isLoading: false,\r\n                    width: width, \r\n                    height: height,\r\n                    id: navigation.getParam('id'),\r\n                    pageCount: navigation.getParam('pageCount') \r\n                });\r\n            } else {\r\n                console.log(\"there\");\r\n                this.setState({\r\n                    vertical: false,\r\n                    isLoading: false,\r\n                    width: width, height: height,\r\n                    id: navigation.getParam('id'),\r\n                    pageCount: navigation.getParam('pageCount') \r\n                })\r\n            }\r\n        }catch (e){\r\n            console.log(e);\r\n        }\r\n    }\r\n    _swapVertical = async () => {\r\n        console.log(\"swapping\");\r\n        \r\n        if (this.state.vertical){\r\n            this.setState({vertical: false});\r\n            await AsyncStorage.setItem('vertical','false');\r\n        } else {\r\n            this.setState({vertical: true});\r\n            await AsyncStorage.setItem('vertical','true');\r\n            for (var i = 0; i<this.state.pageCount; i++) {\r\n                var url = \"http://l2.mml2.net:2202/opds-comics/comicreader/\" + this.state.id + \"?page=\" + i + \"\";\r\n                let pages = this.state.pages;\r\n                pages.push(url);\r\n                this.setState({\r\n                    pages: pages\r\n                });\r\n            }\r\n        }\r\n    }\r\n    onSwipeLeft(gestureState) {\r\n        console.log(\"LEFT\");\r\n        let page = this.state.page;\r\n        page = page + 1;\r\n        this.setState({\r\n            page: page\r\n        });\r\n        this.refs._scrollView.scrollTo({ x: 0, y: 0, animated: true });\r\n    }\r\n\r\n    onSwipeRight(gestureState) {\r\n        console.log(\"RIGHT\");\r\n        let page = this.state.page;\r\n        page = page - 1;\r\n        this.setState({\r\n            page: page\r\n        });\r\n        this.refs._scrollView.scrollTo({ x: 0, y: 0, animated: true });\r\n    }\r\n    _renderItem({ item, index }) {\r\n        return (\r\n            <ScrollView                     minimumZoomScale={1}\r\n            maximumZoomScale={7}>\r\n                <ScrollView horizontal={true}>\r\n            <TouchableHighlight onPress={(evt) => {\r\n                    if (this.state.headerShown) {\r\n                        this.props.navigation.setParams({ showHeader: false })\r\n                        this.setState({ headerShown: false })\r\n                    } else {\r\n                        this.props.navigation.setParams({ showHeader: true })\r\n                        this.setState({ headerShown: true })\r\n                    }\r\n            }}>\r\n                <Image\r\n                    style={{ height: this.state.height, width: this.state.width }}\r\n                    source={{ uri: item, cache: \"force-cache\" }}\r\n                    resizeMode={\"contain\"}\r\n                />\r\n            </TouchableHighlight>\r\n            </ScrollView></ScrollView>\r\n        );\r\n\r\n    }\r\n\r\n    async updateSavedPage(){\r\n        try {\r\n            await AsyncStorage.setItem(this.state.id,this.state.page);\r\n        } catch(e){\r\n            console.log(e);\r\n        }\r\n    }\r\n    async getPage(navigation){\r\n        try{\r\n            let page = await AsyncStorage.getItem(navigation.getParam('id'));\r\n            console.log(page);\r\n            if (parseInt(page)){\r\n            this.setState({\r\n                page: parseInt(page)\r\n            });}\r\n        } catch(e){\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        \r\n        const config = {\r\n            velocityThreshold: 0.5,\r\n            directionalOffsetThreshold: 80,\r\n            detectSwipeUp: false,\r\n            detectSwipeDown: false,\r\n        };\r\n\r\n        if (this.state.isLoading) {\r\n            return (\r\n                <View>\r\n                    <Text>\"HELLO\"</Text>\r\n                </View>\r\n            )\r\n        } else {\r\n            if (!this.state.vertical){\r\n            return (\r\n              <ScrollView ref='_scrollView' style={{paddingBottom: 40}} contentContainerStyle={{flexGrow:1}} minimumZoomScale={1} maximumZoomScale={5}>\r\n                              <ScrollView ref='_scrollView' style={{paddingBottom: 40}} contentContainerStyle={{flexGrow:1}} minimumZoomScale={1} maximumZoomScale={5} horizontal={true}>\r\n                              <TouchableHighlight   onPress={(evt) => {\r\n                                         const {\r\n                                          // Location (x,y) is relative to\r\n                                          // the top-left of the component\r\n                                          locationX,\r\n                                          locationY,\r\n                              \r\n                                          // Page (x,y) is relative to\r\n                                          // the top-left of the device screen\r\n                                          pageX,\r\n                                          pageY,\r\n                                      } = evt.nativeEvent;\r\n                  if (pageX < 80){\r\n                      let page = this.state.page;\r\n                      page = page - 1;\r\n                      this.setState({\r\n                          page: page\r\n                      });\r\n                      this.updateSavedPage();\r\n                      this.refs._scrollView.scrollTo({x:0,y:0,animated:true});\r\n                  } else if (pageX > (Dimensions.get('window').width - 80)){\r\n                      let page = this.state.page;\r\n                      page = page + 1;\r\n                      this.setState({\r\n                          page: page\r\n                      });\r\n                      this.updateSavedPage();\r\n                      this.refs._scrollView.scrollTo({x:0,y:0,animated:true});\r\n                  } else \r\n                  if (this.state.headerShown){\r\n                      this.props.navigation.setParams({ showHeader: false })\r\n                      this.setState({headerShown: false})\r\n                  } else {\r\n                      this.props.navigation.setParams({ showHeader: true })\r\n                      this.setState({headerShown: true})\r\n                  }\r\n                }}>\r\n                  <Image\r\n                  style={{ height: this.state.height, width: this.state.width }}\r\n                  source={{uri: \"http://l2.mml2.net:2202/opds-comics/comicreader/\" + this.state.id + \"?page=\" + this.state.page + \"\", cache: \"force-cache\" }}\r\n                  />\r\n                          </TouchableHighlight>\r\n          </ScrollView>\r\n          </ScrollView>\r\n            );} else {\r\n                console.log(\"vert\");\r\n                console.log(this.state.pages);\r\n                return (\r\n                    <FlatList\r\n                    data={this.state.pages}\r\n                    windowSize={3}\r\n                    initialListSize={3}\r\n                    initialNumToRender={3}\r\n                    maxToRenderPerBatch={3}\r\n                    removeClippedSubviews={true}\r\n                    style={{overscrollBehaviorY: 'auto',\r\n                    touchAction: 'auto'}}\r\n                    keyExtractor={(item, index) => index.toString()}\r\n                    renderItem={this._renderItem.bind(this)}\r\n                />\r\n\r\n\r\n\r\n            );\r\n            }\r\n\r\n        }\r\n    }\r\n}\r\n","import React from 'react';\nimport { Platform } from 'react-native';\nimport { createStackNavigator } from 'react-navigation-stack';\nimport { createBottomTabNavigator } from 'react-navigation-tabs';\n\nimport TabBarIcon from '../components/TabBarIcon';\nimport HomeScreen from '../screens/HomeScreen';\nimport LinksScreen from '../screens/LinksScreen';\nimport SettingsScreen from '../screens/SettingsScreen';\nimport IssueScreen from '../screens/IssueScreen';\n\nconst config = Platform.select({\n  web: { headerMode: 'screen' },\n  headerLayoutPreset: 'center',\n  default: {headerLayoutPreset: 'center'},\n});\n\nconst HomeStack = createStackNavigator(\n  {\n    Home: HomeScreen,\n    IssueScreen: IssueScreen\n  },\n  config\n);\n\nHomeStack.navigationOptions = ({ navigation }) => {\n  let tabBarVisible = true;\n  if (navigation.state.index > 0 && navigation.state.routes[1].routeName === \"IssueScreen\") {\n    tabBarVisible = false;\n  }\n\n  return {\n    tabBarVisible,\n    tabBarLabel: 'Home',\n    tabBarIcon: ({ focused }) => (\n      <TabBarIcon\n        focused={focused}\n        name={\n          Platform.OS === 'ios'\n            ? `ios-information-circle${focused ? '' : '-outline'}`\n            : 'md-information-circle'\n        }\n      />\n    )\n\n  };\n};\n\nHomeStack.path = '';\n\nconst LinksStack = createStackNavigator(\n  {\n    Links: LinksScreen,\n  },\n  config\n);\n\nLinksStack.navigationOptions = {\n  tabBarLabel: 'Links',\n  tabBarIcon: ({ focused }) => (\n    <TabBarIcon focused={focused} name={Platform.OS === 'ios' ? 'ios-link' : 'md-link'} />\n  ),\n};\n\nLinksStack.path = '';\n\nconst SettingsStack = createStackNavigator(\n  {\n    Settings: SettingsScreen,\n  },\n  config\n);\n\nSettingsStack.navigationOptions = {\n  tabBarLabel: 'Settings',\n  tabBarIcon: ({ focused }) => (\n    <TabBarIcon focused={focused} name={Platform.OS === 'ios' ? 'ios-options' : 'md-options'} />\n  ),\n};\n\nSettingsStack.path = '';\n\nconst tabNavigator = createBottomTabNavigator({\n  HomeStack,\n  LinksStack,\n  SettingsStack,\n});\n\ntabNavigator.path = '';\n\nexport default tabNavigator;\n","import { createBrowserApp } from '@react-navigation/web';\nimport { createSwitchNavigator } from 'react-navigation';\n\nimport MainTabNavigator from './MainTabNavigator';\n\nconst switchNavigator = createSwitchNavigator({\n  // You could add another route here for authentication.\n  // Read more at https://reactnavigation.org/docs/en/auth-flow.html\n  Main: MainTabNavigator,\n});\nswitchNavigator.path = '';\n\nexport default createBrowserApp(switchNavigator, { history: 'hash' });\n","import React from 'react'\r\n\r\nconst SocketContext = React.createContext()\r\n\r\nexport default SocketContext","import { AppLoading } from 'expo';\nimport { Asset } from 'expo-asset';\nimport * as Font from 'expo-font';\nimport React, { useState } from 'react';\nimport { Platform, StatusBar, StyleSheet, View } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport AppNavigator from './navigation/AppNavigator';\nimport { Container, Text } from 'native-base';\nimport SocketContext from './components/socket-context';\nimport io from 'socket.io-client';\n\n\nexport default function App(props) {\n  const [isLoadingComplete, setLoadingComplete] = useState(false);\n\n  if (!isLoadingComplete && !props.skipLoadingScreen) {\n    return (\n      <AppLoading\n        startAsync={loadResourcesAsync}\n        onError={handleLoadingError}\n        onFinish={() => handleFinishLoading(setLoadingComplete)}\n      />\n    );\n  } else {\n    return (\n      <View style={styles.container}>\n        {Platform.OS === 'ios' && <StatusBar barStyle=\"default\" />}\n        <AppNavigator />\n      </View>\n    );\n  }\n}\n\nasync function loadResourcesAsync() {\n  await Promise.all([\n    Asset.loadAsync([\n      require('./assets/images/robot-dev.png'),\n      require('./assets/images/robot-prod.png'),\n    ]),\n    Font.loadAsync({\n      // This is the font that we are using for our tab bar\n      ...Ionicons.font,\n      // We include SpaceMono because we use it in HomeScreen.js. Feel free to\n      // remove this if you are not using it in your app\n      'space-mono': require('./assets/fonts/SpaceMono-Regular.ttf'),\n      Roboto: require('native-base/Fonts/Roboto.ttf'),\n      Roboto_medium: require('native-base/Fonts/Roboto_medium.ttf')\n    }),\n  ]);\n}\n\nfunction handleLoadingError(error) {\n  // In this case, you might want to report the error to your error reporting\n  // service, for example Sentry\n  console.warn(error);\n}\n\nfunction handleFinishLoading(setLoadingComplete) {\n  setLoadingComplete(true);\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n});\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"static/media/robot-dev.54da1e98.png\";","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";"],"sourceRoot":""}